(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(t,e,a){},16:function(t,e,a){"use strict";a.r(e);var n=a(1),r=a(2),i=a(4),o=a(3),l=a(5),u=a(0),s=a.n(u),c=a(7),d=a.n(c),h=function(t){function e(){return Object(n.a)(this,e),Object(i.a)(this,Object(o.a)(e).apply(this,arguments))}return Object(l.a)(e,t),Object(r.a)(e,[{key:"render",value:function(){var t=this.props.value.isAlive?"cellAlive":"cellDead";return s.a.createElement("div",{className:"cell",id:t,onClick:this.props.onClick})}}]),e}(s.a.Component),m=function(t){function e(){var t,a;Object(n.a)(this,e);for(var r=arguments.length,l=new Array(r),u=0;u<r;u++)l[u]=arguments[u];return(a=Object(i.a)(this,(t=Object(o.a)(e)).call.apply(t,[this].concat(l)))).state={rowCount:a.props.rowCount,columnCount:a.props.columnCount,boardData:a.props.boardData},a}return Object(l.a)(e,t),Object(r.a)(e,[{key:"handleClick",value:function(t,e){var a=this.state.boardData;a[e][t].isAlive=!this.state.boardData[e][t].isAlive,this.setState({boardData:a})}},{key:"renderBoard",value:function(t){var e=this;return t.map(function(t){return t.map(function(a){return s.a.createElement("div",null,s.a.createElement(h,{onClick:function(){return e.handleClick(a.x,a.y)},value:a}),t[t.length-1]===a?s.a.createElement("div",{id:"newLine"}):"")})})}},{key:"componentWillReceiveProps",value:function(t){JSON.stringify(this.props)!==JSON.stringify(t)&&this.setState({rowCount:t.rowCount,columnCount:t.columnCount,boardData:t.boardData})}},{key:"render",value:function(){return s.a.createElement("div",{id:"mainGrid"},s.a.createElement("div",{id:"instructions"},s.a.createElement("p",null,"Click a cell to highlight active cells."),s.a.createElement("p",null,"Once you are happy with the pattern just hit Next Turn as often as you can.")),this.renderBoard(this.state.boardData))}}]),e}(s.a.Component),v=(a(14),function(t){function e(){var t,a;Object(n.a)(this,e);for(var r=arguments.length,l=new Array(r),u=0;u<r;u++)l[u]=arguments[u];return(a=Object(i.a)(this,(t=Object(o.a)(e)).call.apply(t,[this].concat(l)))).state={rowCount:10,columnCount:10,boardData:a.initBoardData(10,10),history:[]},a.initialiseGame=function(){var t=document.getElementById("height").value,e=document.getElementById("width").value;a.setState({rowCount:t,columnCount:e,boardData:a.initBoardData(t,e),history:[]})},a.nextTurn=function(){for(var t=[],e=0;e<a.state.rowCount;e++)for(var n=0;n<a.state.columnCount;n++)t.push([]),t[e][n]={x:n,y:e,isAlive:!1};for(var r=0;r<a.state.rowCount;r++)for(var i=0;i<a.state.columnCount;i++)t[r][i].isAlive=a.updateCellState(a.state.boardData[r][i].isAlive,r,i);a.arraysEqual(a.state.boardData,t)?alert("No further changes can be made."):a.state.history.push(a.state.boardData),a.setState({boardData:t})},a.previousTurn=function(){if(a.state.history.length>0){var t=a.state.history[a.state.history.length-1];a.setState({boardData:t}),a.state.history.pop()}else alert("No previous states available.")},a}return Object(l.a)(e,t),Object(r.a)(e,[{key:"initBoardData",value:function(t,e){for(var a=[],n=0;n<t;n++)for(var r=0;r<e;r++)a.push([]),a[n][r]={x:r,y:n,isAlive:!1};return a}},{key:"updateCellState",value:function(t,e,a){for(var n=[],r=0;r<3;r++)for(var i=0;i<3;i++){var o=e+r-1,l=a+i-1;o>=0&&o<=this.state.rowCount-1&&l>=0&&l<=this.state.columnCount-1&&(o!==e||l!==a)&&n.push(this.state.boardData[e+r-1][a+i-1].isAlive)}for(var u=0,s=0;s<n.length;s++)n[s]&&u++;return t?!(u<2):3===u||void 0}},{key:"arraysEqual",value:function(t,e){for(var a=0;a<this.state.rowCount;a++)for(var n=0;n<this.state.columnCount;n++)if(t[a][n].isAlive!=e[a][n].isAlive)return!1;return!0}},{key:"render",value:function(){return s.a.createElement("div",{id:"outerWrap"},s.a.createElement("header",null),s.a.createElement("div",{id:"leftPane"},s.a.createElement("h1",null,"Game Of Life"),s.a.createElement("p",null,"Please enter the dimensions of the grid and hit Start Game button below. You can restart any time with new dimensions."),s.a.createElement("label",{name:"width",className:"gridLabel"},"Width: "),s.a.createElement("input",{id:"width",type:"text",name:"width",className:"gridSize"}),s.a.createElement("label",{name:"height",className:"gridLabel"},"Height: "),s.a.createElement("input",{id:"height",type:"text",name:"height",className:"gridSize"}),s.a.createElement("button",{id:"startButton",onClick:this.initialiseGame},"Start Game"),s.a.createElement("div",{id:"buttonPanel"},s.a.createElement("button",{id:"previousTurnButton",onClick:this.previousTurn.bind(this)},"Previous Turn"),s.a.createElement("button",{id:"nextTurnButton",onClick:this.nextTurn.bind(this)},"Next Turn"))),s.a.createElement("div",{id:"mainContent"},s.a.createElement("div",{id:"game"},s.a.createElement(m,{boardData:this.state.boardData,rowCount:this.state.rowCount,columnCount:this.state.columnCount}))))}}]),e}(s.a.Component));d.a.render(s.a.createElement(v,null),document.getElementById("root"))},8:function(t,e,a){t.exports=a(16)}},[[8,2,1]]]);
//# sourceMappingURL=main.137e0cf3.chunk.js.map